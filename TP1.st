Object subclass: #AlgoChat	instanceVariableNames: 'diccUsuarios diccCanales diccConversaciones'	classVariableNames: ''	poolDictionaries: ''	category: 'TP1'!!AlgoChat methodsFor: 'initialization' stamp: 'Jcolombo 9/16/2019 17:49'!initialize	diccCanales := Dictionary new.	diccUsuarios := Dictionary new.	diccConversaciones := Dictionary new.! !!AlgoChat methodsFor: 'as yet unclassified' stamp: 'Jcolombo 9/16/2019 17:58'!obtenerConversaciones	"Devuelve las conversaciones presentes"		^ (diccConversaciones keys).! !!AlgoChat methodsFor: 'as yet unclassified' stamp: 'Jcolombo 9/16/2019 17:24'!getNotificacionesDeUsuario: unUsuario	"Devuelve las notificaciones que tenga el usuario"		 ^(diccUsuarios at: unUsuario) getNotificaciones.! !!AlgoChat methodsFor: 'as yet unclassified' stamp: 'Jcolombo 9/16/2019 17:25'!getNotificacionesDeUsuario: unUsuario resumidasALongitud: largo	"Devuelve las notificaciones del usuario resumidas al largo recibido."		^(diccUsuarios at: unUsuario)  getNotificacionesResumidasALongitud: largo.! !!AlgoChat methodsFor: 'as yet unclassified' stamp: 'Jcolombo 9/16/2019 18:27'!getUsuariosEnCanal: unCanal	"Devuelve los usuarios que hay en el canal recibido"		^(diccCanales at: unCanal)  getUsuarios.! !!AlgoChat methodsFor: 'as yet unclassified' stamp: 'Jcolombo 9/17/2019 20:29'!agregarPalabraClave: unaPalabra alUsuario: unUsuario.	(diccUsuarios at: unUsuario ) agregarPalabraClave: unaPalabra.! !!AlgoChat methodsFor: 'as yet unclassified' stamp: 'Jcolombo 9/16/2019 17:06'!borrarCanal: unCanal	"Borra un canal"		diccCanales removeKey: unCanal.! !!AlgoChat methodsFor: 'as yet unclassified' stamp: 'Jcolombo 9/16/2019 18:14'!getMensajesDeConversacion: unaConversacion	"Devuelve los mensajes que hay en la conversacion."		^( diccConversaciones at: unaConversacion) getMensajes.! !!AlgoChat methodsFor: 'as yet unclassified' stamp: 'Jcolombo 9/17/2019 19:46'!publicarMensaje: mensajeRecibido enCanal: unCanal	"Publica un mensaje nuevo en el canal."		(diccCanales at: unCanal ) publicarMensaje: mensajeRecibido.		(diccCanales at: unCanal ) comprobarPalabrasClaves: mensajeRecibido deCanal: unCanal.! !!AlgoChat methodsFor: 'as yet unclassified' stamp: 'Jcolombo 9/16/2019 17:23'!enviarMensaje: mensajeNuevo aUsuario: usuarioRecibido	"Envia un mensaje al usuario"	(diccUsuarios at: usuarioRecibido) guardarNotificacion: mensajeNuevo.! !!AlgoChat methodsFor: 'as yet unclassified' stamp: 'Jcolombo 9/16/2019 18:13'!crearConversacionConUsuarios: unaConversacion	"Crea una conversacion con los usuarios recibidos y los agrega a la misma."		| listaUsuarios |		listaUsuarios := unaConversacion splitOn: ','.	diccConversaciones at: unaConversacion put: Conversacion new.		listaUsuarios do: [ :each | 					(diccConversaciones at: unaConversacion) agregarUsuario: (diccUsuarios at: each)						]! !!AlgoChat methodsFor: 'as yet unclassified' stamp: 'Jcolombo 9/17/2019 20:24'!agregarCanalConNombre: unCanal	"Agrega un canal nuevo"		diccCanales at: unCanal put: Canal new.	! !!AlgoChat methodsFor: 'as yet unclassified' stamp: 'Jcolombo 9/16/2019 17:39'!mensajesDelCanal: unCanal	"Devuelve los mensajes del canal"		^(diccCanales at: unCanal) getMensajes.! !!AlgoChat methodsFor: 'as yet unclassified' stamp: 'Jcolombo 9/16/2019 18:04'!publicarMensaje: unMensaje enConversacion: unaConversacion	"Envia un mensaje a la conversacion recibida"		(diccConversaciones at: unaConversacion ) agregarMensaje: unMensaje.! !!AlgoChat methodsFor: 'as yet unclassified' stamp: 'Jcolombo 9/16/2019 18:02'!obtenerUsuariosConversacion: unaConversacion	"Devuelve los usuarios que hay en la conversacion"		^ (diccConversaciones at: unaConversacion) getUsuarios.! !!AlgoChat methodsFor: 'as yet unclassified' stamp: 'Jcolombo 9/17/2019 17:17'!agregarUsuario: unUsuario alCanal: unCanal	"Agrega un usuario al canal recibido"		(diccCanales at: unCanal) agregarUsuarioACanal: (diccUsuarios at: unUsuario).		(diccUsuarios at: unUsuario ) agregarCanal: unCanal.! !!AlgoChat methodsFor: 'as yet unclassified' stamp: 'Jcolombo 9/16/2019 17:01'!getCantidadCanales	"Devuelve la cantidad de canales."		^(diccCanales size).! !!AlgoChat methodsFor: 'as yet unclassified' stamp: 'Jcolombo 9/16/2019 18:40'!agregarUsuarioConNombre: unUsuario	"Agrega un usuario nuevo."		|usuarioNuevo |		usuarioNuevo := Usuario new.	usuarioNuevo establecerNombre: unUsuario.		diccUsuarios at: unUsuario put: usuarioNuevo.! !!AlgoChat methodsFor: 'as yet unclassified' stamp: 'Jcolombo 9/16/2019 17:04'!borrarUsuario: unUsuario	"Borra un usuario."		diccUsuarios removeKey: unUsuario.! !!AlgoChat methodsFor: 'as yet unclassified' stamp: 'Jcolombo 9/16/2019 18:17'!getNotificacionesConversacion: unaConversacion resumidosA: largo	"Devuelve las notificaciones de la conversacion resumidas al largo recibido"		^( diccConversaciones at: unaConversacion ) getMensajesResumidosA: largo.! !!AlgoChat methodsFor: 'as yet unclassified' stamp: 'Jcolombo 9/16/2019 17:57'!cantidadConversaciones	"Devuelve la cantidad de conversaciones"		^( diccConversaciones size).! !!AlgoChat methodsFor: 'as yet unclassified' stamp: 'Jcolombo 9/17/2019 20:49'!pausarPalabrasDeCanal: unCanal paraUsuario: unUsuario	(diccUsuarios at: unUsuario ) pausarPalabrasDeCanal: unCanal.! !!AlgoChat methodsFor: 'as yet unclassified' stamp: 'Jcolombo 9/17/2019 21:01'!reanudarPalabrasDeCanal: unCanal paraUsuario: unUsuario	(diccUsuarios at: unUsuario ) reanudarPalabrasDeCanal: unCanal.! !!AlgoChat methodsFor: 'as yet unclassified' stamp: 'Jcolombo 9/16/2019 17:01'!getCantidadUsuarios	"Devuelve la cantidad de usuarios."		^ (diccUsuarios size).! !!AlgoChat methodsFor: 'as yet unclassified' stamp: 'Jcolombo 9/16/2019 17:41'!mensajesDelCanal: unCanal resumidosALongitud: largo	"Devuelve los mensajes del canal resumidos al largo recibido."			^ (diccCanales at: unCanal) getNotificacionResumidaA: largo.! !Object subclass: #Canal	instanceVariableNames: 'notificaciones listaUsuarios'	classVariableNames: ''	poolDictionaries: ''	category: 'TP1'!!Canal methodsFor: 'initialization' stamp: 'Jcolombo 9/17/2019 17:14'!initialize	notificaciones := Notificaciones new.	listaUsuarios := OrderedCollection new.! !!Canal methodsFor: 'as yet unclassified' stamp: 'Jcolombo 9/17/2019 20:26'!comprobarPalabrasClaves: mensajeRecibido deCanal: unCanal	| listaDeUsuarios listaPalabras mensajeALista|		mensajeALista := (mensajeRecibido splitOn: ' ').	listaDeUsuarios := self getUsuarios.		listaDeUsuarios do: [ :unUsuario |						listaPalabras := (unUsuario getPalabrasClaveDeCanal: unCanal).						(listaPalabras includesAny: mensajeALista ) ifTrue:[ unUsuario guardarNotificacion: mensajeRecibido				]		 ]	! !!Canal methodsFor: 'as yet unclassified' stamp: 'Jcolombo 9/16/2019 17:40'!getMensajes	"Devuelve los mensajes que tiene el canal."		^(notificaciones getNotificaciones).! !!Canal methodsFor: 'as yet unclassified' stamp: 'Jcolombo 9/16/2019 18:49'!getUsuarios	"Devuelve los usuarios que hay en el canal"		^ listaUsuarios! !!Canal methodsFor: 'as yet unclassified' stamp: 'Jcolombo 9/16/2019 17:43'!getNotificacionResumidaA: largo	"Devuelve las notificaciones del canal resumidas al largo"		^( notificaciones getNotificacionResumidaA: largo).! !!Canal methodsFor: 'as yet unclassified' stamp: 'Jcolombo 9/17/2019 16:57'!publicarMensaje: unMensaje	"guarda el mensaje en notificaciones"		notificaciones nuevaNotificacion: unMensaje.		! !!Canal methodsFor: 'as yet unclassified' stamp: 'Jcolombo 9/17/2019 17:14'!agregarUsuarioACanal: unUsuario	"Agrega un usuario a la lista de usuarios del canal."		listaUsuarios add: unUsuario.! !Object subclass: #Conversacion	instanceVariableNames: 'listaUsuarios notificaciones'	classVariableNames: ''	poolDictionaries: ''	category: 'TP1'!!Conversacion methodsFor: 'as yet unclassified' stamp: 'Jcolombo 9/16/2019 17:56'!getCantidadUsuarios	"Devuelve la cantidad de usuarios que estan en la conversacion"		^( listaUsuarios size).! !!Conversacion methodsFor: 'as yet unclassified' stamp: 'Jcolombo 9/16/2019 18:14'!getMensajes	"Devuelve los mensajes de la conversacion"		^(notificaciones getNotificaciones).! !!Conversacion methodsFor: 'as yet unclassified' stamp: 'Jcolombo 9/16/2019 19:17'!getUsuarios	"Devuelve los usuarios en la conversacion"			| listaUsuariosPorNombre |		listaUsuariosPorNombre := OrderedCollection new.	listaUsuarios do: [ :usuario |						listaUsuariosPorNombre add: (usuario getNombre).			 ].				^(listaUsuariosPorNombre joinUsing: ',').			! !!Conversacion methodsFor: 'as yet unclassified' stamp: 'Jcolombo 9/16/2019 18:15'!getMensajesResumidosA: largo	"Devuelve los mensajes de la conversacion resumidos al largo recibido"		^( notificaciones getNotificacionResumidaA: largo).! !!Conversacion methodsFor: 'as yet unclassified' stamp: 'Jcolombo 9/16/2019 18:11'!enviarMensajeAUsuarios: unMensaje	"Envia el mensaje recibido a todos los usuarios de la conversacion"		listaUsuarios do: [ :each | 			(each )guardarNotificacion: unMensaje.				]! !!Conversacion methodsFor: 'as yet unclassified' stamp: 'Jcolombo 9/16/2019 17:52'!agregarUsuario: unUsuario	"Agrega un usuario a la lista de usuarios de la conversacion"		listaUsuarios add: unUsuario.! !!Conversacion methodsFor: 'as yet unclassified' stamp: 'Jcolombo 9/16/2019 18:09'!agregarMensaje: unMensaje	"Agrega un mensaje a la conversacion y a los usuarios"		notificaciones nuevaNotificacion: unMensaje.	self enviarMensajeAUsuarios: unMensaje.! !!Conversacion methodsFor: 'initialization' stamp: 'Jcolombo 9/16/2019 18:04'!initialize	listaUsuarios := OrderedCollection new.	notificaciones := Notificaciones new.! !Object subclass: #Notificaciones	instanceVariableNames: 'notificacion'	classVariableNames: ''	poolDictionaries: ''	category: 'TP1'!!Notificaciones methodsFor: 'initialization' stamp: 'Jcolombo 9/16/2019 17:30'!initialize	"Inicializa una OrderedCollection que es donde se van a almacenar las notificaciones"		notificacion := OrderedCollection new.! !!Notificaciones methodsFor: 'as yet unclassified' stamp: 'Jcolombo 9/16/2019 17:30'!getNotificacionResumidaA: largo	"	Devuelve las notificaciones resumidas al largo recibido"			| listaNotificacionesResumida |					listaNotificacionesResumida := notificacion  collect: [ :mensajeViejo| (mensajeViejo contractTo: largo),'...'].				^(listaNotificacionesResumida joinUsing: ' | ').	! !!Notificaciones methodsFor: 'as yet unclassified' stamp: 'Jcolombo 9/16/2019 17:30'!nuevaNotificacion: mensajeRecibido	"Agrega una nueva notificacion a la lista"	notificacion add: mensajeRecibido.! !!Notificaciones methodsFor: 'as yet unclassified' stamp: 'Jcolombo 9/16/2019 17:30'!getNotificaciones	"Devuelve las notificaciones "	^ (notificacion joinUsing: ' | ').! !Object subclass: #Usuario	instanceVariableNames: 'notificaciones nombreUsuario palabrasClaveXCanal diccCanalesPausados'	classVariableNames: ''	poolDictionaries: ''	category: 'TP1'!!Usuario methodsFor: 'as yet unclassified' stamp: 'Jcolombo 9/17/2019 17:15'!establecerNombre: nombre	"Establece el nombre del usuario"			nombreUsuario := nombre.	! !!Usuario methodsFor: 'as yet unclassified' stamp: 'Jcolombo 9/17/2019 20:59'!pausarPalabrasDeCanal: unCanal	|palabrasAPausar|		palabrasAPausar := OrderedCollection new.	 	palabrasAPausar add: self getNombreArrobado.		diccCanalesPausados at: unCanal put: (palabrasClaveXCanal at: unCanal ).		palabrasClaveXCanal at: unCanal put: palabrasAPausar.! !!Usuario methodsFor: 'as yet unclassified' stamp: 'Jcolombo 9/17/2019 21:00'!agregarCanal: unCanal	|listaPalabrasClave |		listaPalabrasClave := OrderedCollection new.	listaPalabrasClave add: (self getNombreArrobado).	palabrasClaveXCanal  at: unCanal put: listaPalabrasClave.! !!Usuario methodsFor: 'as yet unclassified' stamp: 'Jcolombo 9/16/2019 17:11'!guardarNotificacion: mensajeRecibido	notificaciones nuevaNotificacion: mensajeRecibido.		! !!Usuario methodsFor: 'as yet unclassified' stamp: 'Jcolombo 9/16/2019 17:31'!getNotificacionesResumidasALongitud: largo		^(notificaciones getNotificacionResumidaA: largo).! !!Usuario methodsFor: 'as yet unclassified' stamp: 'Jcolombo 9/16/2019 19:18'!getNombre	"Devuelve el nombre del usuario con el @ delante"		^ (nombreUsuario)! !!Usuario methodsFor: 'as yet unclassified' stamp: 'Jcolombo 9/16/2019 17:16'!getNotificaciones	^ (notificaciones getNotificaciones).! !!Usuario methodsFor: 'as yet unclassified' stamp: 'Jcolombo 9/16/2019 19:18'!getNombreArrobado	"Devuelve el nombre del usuario con el @ delante"		^ ('@',nombreUsuario)! !!Usuario methodsFor: 'as yet unclassified' stamp: 'Jcolombo 9/17/2019 21:02'!reanudarPalabrasDeCanal: unCanal	| listaPalabras |		listaPalabras := diccCanalesPausados at: unCanal.		palabrasClaveXCanal at: unCanal put: listaPalabras.	! !!Usuario methodsFor: 'as yet unclassified' stamp: 'Jcolombo 9/17/2019 20:32'!agregarPalabraClave: unaPalabra	palabrasClaveXCanal do: [ :canal | 						canal add: unaPalabra.				]		! !!Usuario methodsFor: 'as yet unclassified' stamp: 'Jcolombo 9/17/2019 19:44'!getPalabrasClaveDeCanal: unCanal	^(palabrasClaveXCanal at: unCanal ).! !!Usuario methodsFor: 'initialization' stamp: 'Jcolombo 9/17/2019 20:13'!initialize	notificaciones := Notificaciones new.	palabrasClaveXCanal := Dictionary  new.	diccCanalesPausados := Dictionary new.	nombreUsuario := ''.! !